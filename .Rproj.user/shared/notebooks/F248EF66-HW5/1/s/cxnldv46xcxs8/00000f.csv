"0","MLE <- function(Y, X){"
"0","  fit <- glm(Y ~ X, family = poisson)"
"0","  est <- fit$coefficients"
"0","  names(est) <- c(""alpha"", ""beta"")"
"0","  return(fit$coefficients)"
"0","}"
"0",""
"0","RC <- function(Y, W, sigma2_eps){"
"0","  mu_X  <- mean(W)"
"0","  var_W <- var(W)"
"0","  var_X <- var_W - sigma2_eps"
"0","  "
"0","  Xhat <- mu_X + var_X * var_W^(-1) * (W - mu_X)"
"0","  "
"0","  return(MLE(Y, Xhat))"
"0","}"
"0",""
"0","# Corrected score for Poisson regression"
"0","cscore <- function(theta, Y, W, mu_eps, sigma2_eps){"
"0","  alpha <- theta[1]"
"0","  beta  <- theta[2]"
"0","  "
"0","  m_beta <- sigma2_eps * beta^2 / 2"
"0","  sum(- (Y*(alpha + beta * (W - mu_eps)) - exp(alpha + beta * W - m_beta)) )"
"0","}"
"0",""
"0",""
"0","CS <- function(Y, W, mu_eps, sigma2_eps, init = c(0,0)){"
"0","  fit <- optim(init, fn=cscore, Y=Y, W=W, mu_eps=mu_eps, sigma2_eps=sigma2_eps)"
"0","  return(fit$par)"
"0","}"
"0",""
"0",""
"0",""
"0","sim_data <- function(N, alpha, beta, sigma2_eps, X_model = ""normal""){"
"0","  # Simulate True Covariates"
"0","  if(X_model == ""normal""){"
"0","    X <- rnorm(N)"
"0","  } else if(X_model == ""chi-square""){"
"0","    X <- ( rchisq(N, 1) - 1 / (sqrt(2)) )"
"0","  }"
"0","  "
"0","  # Simulate ME "
"0","  eps <- rnorm(N, sd = sqrt(sigma2_eps))"
"0","  "
"0","  # Define surrogate"
"0","  W <- X + eps"
"0","  "
"0","  # Linear predictor"
"0","  eta <- alpha + beta*X"
"0","  "
"0","  # Simulate Y"
"0","  Y <- sapply(exp(eta), function(lambda){rpois(1, lambda)})"
"0","  "
"0","  return(list(Y=Y, X=X, W=W))"
"0","}"
